function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{Type{EzXML.Document}, Ptr{EzXML._Node}})
    precompile(Tuple{Type{MusicXML.Time}, Nothing, Nothing, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Midiinstrument}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Unpitched}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Clef}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Scoreinstrument}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Mididevice}, Nothing, Nothing, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Measure}, Nothing, Nothing, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Part}, Nothing, Nothing, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Partlist}, Nothing, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Doc}, Nothing, EzXML.Document})
    precompile(Tuple{Type{MusicXML.Mididevice}, Int64, Nothing, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Time}, Int8, Nothing, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Measure}, String, Array{MusicXML.NoteX, 1}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Time}, Nothing, Int8, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Part}, Array{MusicXML.Measure, 1}, Nothing, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Pitch}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Mididevice}, Nothing, String, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Part}, Nothing, String, EzXML.Node})
    precompile(Tuple{Type{EzXML.Node}, Ptr{EzXML._Node}, Bool})
    precompile(Tuple{Type{NamedTuple{(:stderr,), T} where T<:Tuple}, Tuple{Base.PipeEndpoint}})
    precompile(Tuple{Type{MusicXML.NoteX}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Scorepartwise}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Rest}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Attributes}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Transpose}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Mididevice}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Scorepart}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Measure}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Key}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Time}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Part}, EzXML.Node})
    precompile(Tuple{Type{MusicXML.Measure}, String, Nothing, EzXML.Node})
    precompile(Tuple{Type{EzXML.Node}, Ptr{EzXML._Node}})
end
