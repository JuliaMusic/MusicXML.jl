function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{typeof(AcuteML.findfirstlocal), String, EzXML.Node})
    precompile(Tuple{typeof(AcuteML.findallcontent), Type{Array{MusicXML.Measure, 1}}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findalllocal), String, EzXML.Node})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{Float64}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{Int64}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.YN}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findallcontent), Type{Array{MusicXML.NoteX, 1}}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findallcontent), Type{Array{MusicXML.Part, 1}}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Transpose}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{Float16}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{UInt16}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{Int8}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{UInt64}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{Int16}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{Bool}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Midiinstrument}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Scoreinstrument}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findallcontent), Type{Array{MusicXML.Scorepart, 1}}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Unpitched}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Clef}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Partlist}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Pitch}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Key}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Rest}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Time}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Attributes}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Mididevice}, String, EzXML.Node, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{MusicXML.Scorepartwise}, String, EzXML.Document, Int64})
    precompile(Tuple{typeof(AcuteML.findfirstcontent), Type{String}, String, EzXML.Node, Int64})
end
