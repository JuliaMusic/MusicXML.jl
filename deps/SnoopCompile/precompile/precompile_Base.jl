function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{typeof(Base.stale_cachefile), String, String})
    precompile(Tuple{typeof(Base.tryparse_internal), Type{UInt8}, String, Int64, Int64, Int64, Bool})
    precompile(Tuple{typeof(Base.tryparse_internal), Type{UInt64}, String, Int64, Int64, Int64, Bool})
    precompile(Tuple{typeof(Base.tryparse_internal), Type{UInt16}, String, Int64, Int64, Int64, Bool})
    precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
    precompile(Tuple{typeof(Base.tryparse_internal), Type{Int16}, String, Int64, Int64, Int64, Bool})
    precompile(Tuple{typeof(Base.register_root_module), Module})
    precompile(Tuple{typeof(Base.tryparse), Type{Float16}, String})
    precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
    precompile(Tuple{typeof(Base._all), typeof(Base.Unicode.isspace), Base.SubString{String}, Base.Colon})
    precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Base.UUID})
    precompile(Tuple{typeof(Base.getindex), EzXML.Node, String})
    precompile(Tuple{typeof(Base.tryparse_internal), Type{Int8}, String, Int64, Int64, Int64, Bool})
    precompile(Tuple{typeof(Base.getindex), Array{EzXML.XMLError, 1}, Int64})
    precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
    precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
    precompile(Tuple{typeof(Base._require), Base.PkgId})
    precompile(Tuple{typeof(Base.show_delim_array), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{UInt64, UInt64}, Char, Char, Char, Bool, Int64, Int64})
    precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
    precompile(Tuple{typeof(Base.tryparse_internal), Type{Bool}, String, Int64, Int64, Int64, Bool})
    precompile(Tuple{typeof(Base.haskey), EzXML.Node, String})
    isdefined(Base, Symbol("##open#563")) && precompile(Tuple{getfield(Base, Symbol("##open#563")), Bool, Bool, typeof(Base.open), Base.CmdRedirect, Base.PipeEndpoint})
    precompile(Tuple{typeof(Base.manifest_deps_get), String, Base.PkgId, String})
    isdefined(Base, Symbol("##sprint#339")) && precompile(Tuple{getfield(Base, Symbol("##sprint#339")), Nothing, Int64, typeof(Base.sprint), typeof(identity), UInt64})
    precompile(Tuple{typeof(Base.require), Module, Symbol})
    isdefined(Base, Symbol("##pipeline#553")) && precompile(Tuple{getfield(Base, Symbol("##pipeline#553")), Nothing, Nothing, Base.PipeEndpoint, Bool, typeof(Base.pipeline), Base.Cmd})
    precompile(Tuple{typeof(Base.findall), String, EzXML.Node, Array{Base.Pair{String, String}, 1}})
    precompile(Tuple{typeof(Base._include_from_serialized), String, Array{Any, 1}})
    precompile(Tuple{typeof(Base.print_to_string), EzXML.Node})
    precompile(Tuple{typeof(Base.require), Base.PkgId})
    precompile(Tuple{typeof(Base.pathof), Module})
    precompile(Tuple{typeof(Base._require_from_serialized), String})
    precompile(Tuple{typeof(Base.write), Base.Process, String})
    precompile(Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, UInt64})
    precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.UUID})
    precompile(Tuple{typeof(Base.write), Base.PipeEndpoint, String})
    precompile(Tuple{typeof(Base.open), Base.CmdRedirect, String, Base.PipeEndpoint})
    precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, MusicXML.Attributes}}, String})
    precompile(Tuple{typeof(Base.:(<=)), Int64, Nothing})
    precompile(Tuple{typeof(Base.identify_package), Base.PkgId, String})
    precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Base.PipeEndpoint, Bool}, Int64})
    isdefined(Base, Symbol("##parse#347")) && precompile(Tuple{getfield(Base, Symbol("##parse#347")), Nothing, typeof(Base.parse), Type{Bool}, String})
    isdefined(Base, Symbol("##parse#347")) && precompile(Tuple{getfield(Base, Symbol("##parse#347")), Nothing, typeof(Base.parse), Type{Int8}, String})
    precompile(Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{String, 1}})
    precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Base.PipeEndpoint, Bool}, Int64, Int64})
    precompile(Tuple{typeof(Base.rawhandle), Base.PipeEndpoint})
    precompile(Tuple{typeof(Base.MainInclude.include), String})
    precompile(Tuple{typeof(Base.setproperty!), EzXML.Node, Symbol, EzXML.Node})
    isdefined(Base, Symbol("##parse#347")) && precompile(Tuple{getfield(Base, Symbol("##parse#347")), Nothing, typeof(Base.parse), Type{Int16}, String})
    isdefined(Base, Symbol("##parse#347")) && precompile(Tuple{getfield(Base, Symbol("##parse#347")), Nothing, typeof(Base.parse), Type{UInt16}, String})
    isdefined(Base, Symbol("##parse#347")) && precompile(Tuple{getfield(Base, Symbol("##parse#347")), Nothing, typeof(Base.parse), Type{UInt64}, String})
    precompile(Tuple{typeof(Base.getproperty), Base.Process, Symbol})
    precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{UInt64, UInt64}})
    precompile(Tuple{typeof(Base.convert), Type{IO}, Base.PipeEndpoint})
    precompile(Tuple{typeof(Base.getproperty), EzXML.Node, Symbol})
    precompile(Tuple{typeof(Base.getproperty), EzXML.Document, Symbol})
    isdefined(Base, Symbol("#kw##pipeline")) && precompile(Tuple{getfield(Base, Symbol("#kw##pipeline")), NamedTuple{(:stderr,), Tuple{Base.PipeEndpoint}}, typeof(Base.pipeline), Base.Cmd})
    precompile(Tuple{typeof(Base.string), EzXML.Node})
    precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, EzXML.Node})
end
